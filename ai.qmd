---
title: "20 Useful ChatGPT Commands for Research & Productivity"
author: "Xu Haiyang"
date: "2025-02-01"
format: html
---

# Useful ChatGPT Commands

Below is a list of 20 commands (prompt techniques) you can use with ChatGPT to improve your research and work productivity. Each command includes a brief explanation and a copyable prompt.

## 1. Summarize Weekly Accomplishments

**Prompt:**

```         
Summarize the main achievements, challenges, and next steps from this week’s work on [project or task]. Include key technical details and highlight any roadblocks that need attention.
```

## 2. Structured Report Format

**Prompt:**

```         
Create a detailed weekly report template for a computer scientist. It should have sections for:

1. Overview
2. Accomplishments
3. Challenges
4. Metrics (e.g., code commits, bug fixes)
5. Next steps and Action Items

Provide a professional tone and clear formatting. 
```

## 3. Translating Technical Jargon

**Prompt:**

```         
Rewrite the following technical update for a non-technical audience: [insert detailed technical update]. Focus on explaining the key points in simple, concise language. 
```

## 4. Converting Bullet Points to Narrative

**Prompt:**

```         
Turn these bullet points into a well-structured weekly report:

1. Completed module integration
2. Fixed critical bugs in feature X
3. Coordinated with the testing team
4. Planning for performance improvements next week 
```

## 5. Highlighting Key Metrics

**Prompt:**

```         
Draft a weekly report focusing on performance metrics for [specific project]. Include quantitative data (e.g., number of commits, test coverage, processing speed improvements) and interpret these metrics for stakeholders.
```

## 6. Bug Fixes & System Stability

**Prompt:**

```         
List all critical bugs you fixed this week along with their impact on system performance. Then, summarize the overall improvement in system stability and any residual issues that need follow-up.
```

## 7. New Feature Development

**Prompt:**

```         
Draft a report outlining new features introduced during the week. Include technical details, the challenges you faced during implementation, and potential areas for further enhancement.
```

## 8. Milestone Timeline

**Prompt:**

```         
Create a timeline of major tasks and milestones achieved this week. For each milestone, provide a brief description of the work done, any obstacles encountered, and the expected next steps. 
```

## 9. Cross-Team Collaboration

**Prompt:**

```         
Summarize your interactions with other teams or departments this week. Highlight the feedback received, any tasks delegated or shared, and outline any pending follow-ups that require additional coordination. 
```

## 10. Performance Metrics & Analytics

**Prompt:**

```         
Prepare a performance analytics report for the week. Include quantitative data such as code commits, review metrics, test coverage improvements, and any benchmark results. Interpret these metrics in a way that highlights progress and areas needing improvement. 
```

## 11. Learning & Professional Development

**Prompt:**

```         
Detail any new skills learned or training sessions attended during the week. Explain how these insights have been applied to current projects or how they might improve future work. 
```

## 12. Risk Assessment & Mitigation

**Prompt:**

```         
Identify any potential risks or issues encountered during the week, explain their potential impact on the project, and describe the mitigation strategies you implemented or propose for the future.
```

## 13. Task Completion Overview

**Prompt:**

```         
Summarize all tasks and projects completed this week, including a brief note on how each task contributed to broader project milestones. Highlight any tasks that are still in progress and outline the next steps. 
```

## 14. Roadmap & Process Update

**Prompt:**

```         
Update your project roadmap based on this week’s progress. Identify any adjustments made to timelines or priorities, and explain the reasons behind these changes. 
```

## 15. Retrospective & Process Improvement

**Prompt:**

```         
Draft a brief retrospective for the week: What went well? What didn’t? Include insights on how you plan to improve processes or overcome obstacles in the coming weeks. 
```

## 16. Project Impact & Value Delivery

**Prompt:**

```         
Describe how your work this week contributed to overall business value. Highlight any cost savings, efficiency improvements, or innovative contributions that directly support your organization’s strategic goals. 
```

## 17. Technical Debt & Refactoring Updates

**Prompt:**

```         
Summarize the technical debt issues addressed during the week. Explain the refactoring or improvements made, and how these efforts enhance code quality and system maintainability. 
```

## 18. Feedback Incorporation & Next Iterations

**Prompt:**

```         
Document any feedback received from code reviews, user testing, or stakeholder meetings. Outline how you are incorporating this feedback into future iterations to improve project outcomes.  
```

## 19. Resource Allocation & Utilization

**Prompt:**

```         
Detail how your time and resources were distributed across different tasks this week. Include any challenges with resource constraints and describe strategies implemented to manage these effectively.
```

**Explanation:** Provides concise historical overviews.

## 20. Innovation & Experimentation

**Prompt:**

```         
Report on any experimental techniques, prototypes, or innovative ideas you explored this week. Discuss their potential benefits or risks and propose actionable next steps for further investigation. 
```
